FROM @make:docker_base_image@

STOPSIGNAL SIGTERM

#^
#^-- specified by the base image
#
#v-- specified by the current image
#v

ENV     buildroot_user_name=developer
ENV     buildroot_group_name=developer

ENV     buildroot_user_home_ref=/v/home.ref

ENV     buildroot_user_sandbox_root=/v/sandbox

ENV     buildroot_user_home=/home/${buildroot_user_name}

ENV     buildroot_docker_image_setup_root=/v/setup.buildroot

VOLUME  [ \
		"${buildroot_user_sandbox_root}" \
		"${buildroot_user_home_ref}" \
	]

##
## ensure everything is installed
##

USER    root
WORKDIR "${buildroot_docker_image_setup_root}"

COPY    artifacts/ artifacts/

COPY    support/container/software/ support/container/software/

RUN     sh support/container/software/provision.sh

##
## ensure members of group sudo don't need to authenticate further
## 

USER    root
WORKDIR "${buildroot_docker_image_setup_root}"

RUN     for f1 in /etc/sudoers.d/group-sudo-no-password-needed ; do \
        \
		echo '%sudo ALL = NOPASSWD: ALL' > "$f1" ; \
		chmod 0440 "$f1" ; \
	done

##
## ensure the buildroot user exists
##

USER    root
WORKDIR "${buildroot_docker_image_setup_root}"

RUN     addgroup "${buildroot_group_name}"

RUN     adduser \
		--shell    "/bin/bash" \
		--ingroup  "${buildroot_group_name}" \
		--home     "${buildroot_user_home}" \
		--gecos    "Used for buildroot-based builds" \
		--disabled-password \
		"${buildroot_user_name}"

RUN     adduser "${buildroot_user_name}" root
RUN     adduser "${buildroot_user_name}" sudo

COPY    support/container/home-skeleton/ "${buildroot_user_home}"/

##
## ensure all remaining setup files are in place
## 

USER    root
WORKDIR "${buildroot_docker_image_setup_root}"

COPY    ./ ./

RUN     ls -alh -R

##
## establish entry point
##

USER    root
WORKDIR "${buildroot_docker_image_setup_root}"

COPY    start.sh ./

ENTRYPOINT [ "./start.sh" ]

##
